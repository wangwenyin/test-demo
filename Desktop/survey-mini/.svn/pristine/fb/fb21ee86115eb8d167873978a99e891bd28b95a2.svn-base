// pages/surveyform/surveyform.js
const app = getApp()
const { formatDate, formatTime } = require('../../utils/util.js')
const { getResidenceSurveyData, saveResidenceSurveyData, getSurveyImgs, sendMessage, saveSurveyPaths } = require('../../api.js')

Page({

  /**
   * 页面的初始数据
   */
  data: {
    list: [
      {
        id: '1',
        title: '基本信息'
      },
      {
        id: '2',
        title: '外部环境'
      },
      {
        id: '3',
        title: '内部状况'
      },
      {
        id: '4',
        title: '限制情况说明'
      },
      {
        id: '5',
        title: '查勘图片'
      },
      {
        id: '6',
        title: '签名'
      }
    ],
    form: {},
    selectedId: '1',
    date: formatDate(new Date()),
    scroll: true,
    height: 40,
    fixed: false,
    show: false,
    nocancel:false,
    info: '',
    show_ktdmqt: false,
    show_ktqmqt: false,
    show_ktthqt: false,
    show_ktmqt: false,
    show_ktcqt: false,
    show_cfdmqt: false,
    show_cfqmqt: false,
    show_cfthqt: false,
    show_wcdmqt: false,
    show_wcqmqt: false,
    show_wcthqt: false,
    show_sfgbyjg_qt: false,
    show_syxz_zj: false,
    lkr_signatureImgs: [],
    ckr_signatureImgs: [],
    smr_signatureImgs: [],
    qrr_signatureImgs: [],
    dt_value: '有',
    isornot: [
      { value: '有', checked: 'true' },
      { value: '无' }
    ],
    usingStatus: [
      { value: '自用', checked: 'true' },
      { value: '空置' },
      { value: '出租' }
    ],
    usages: [
      { value: '住宅', checked: 'true' },
      { value: '办公' },
      { value: '商铺' }
    ],
    prop_types: [
      { value: '小区', checked: 'true' },
      { value: '大院' },
      { value: '单体楼' }
    ],
    maintenances: [
      { value: '良好', checked: 'true' },
      { value: '一般' },
      { value: '较差' }
    ],
    daylightings: [
      { value: '良好', checked: 'true' },
      { value: '一般' },
      { value: '较差' }
    ],
    roundSupportings: [
      { value: '商场', checked: 'true' },
      { value: '学校' },
      { value: '幼儿园' },
      { value: '医院' },
      { value: '邮局' },
      { value: '银行' },
      { value: '菜市场' },
      { value: '超市' },
      { value: '公园' },
      { value: '体育设施' }
    ],
    landscapes: [
      { value: '小区公园', checked: 'true' },
      { value: '望江' },
      { value: '人工湖' },
      { value: '山' },
      { value: '球场' },
      { value: '泳池' },
      { value: '无' }
    ],
    dtStatus2: [
      { value: '完好', checked: 'true' },
      { value: '轻度破损' },
      { value: '一般破损' },
      { value: '严重破损' }
    ],
    communications: [
      { value: '网络', checked: 'true' },
      { value: '有线电视' },
      { value: '电话' },
      { value: '完好' }
    ],
    pipingGas: [
      { value: '完好', checked: 'true' },
      { value: '轻度破损' }
    ],
    prop_manage: [
      { value: '防盗门', checked: 'true' },
      { value: '自动对讲系统' },
      { value: '可视对讲系统' },
      { value: '小区监控系统' },
      { value: '24小时安保' },
      { value: '无' }
    ],
    decorate: [
      { value: '精装', checked: 'true' },
      { value: '豪装' },
      { value: '普通' },
      { value: '毛坯' }
    ],
    outside_wall: [
      { value: '条形砖', checked: 'true' },
      { value: '玻璃幕墙' },
      { value: '水刷石' },
      { value: '涂料' },
      { value: '其它' }
    ],
    sdStatus: [
      { value: '明敷', checked: 'true' },
      { value: '暗敷' },
      { value: '无' }
    ],
    sdStatus2: [
      { value: '完好', checked: 'true' },
      { value: '轻度破损' },
      { value: '一般破损' },
      { value: '严重破损' }
    ],
    xfStatus: [
      { value: '消防栓', checked: 'true' },
      { value: '自动喷淋' },
      { value: '烟感报警' },
      { value: '无' }
    ],
    xfStatus2: [
      { value: '完好', checked: 'true' },
      { value: '轻度破损' },
      { value: '一般破损' },
      { value: '严重破损' }
    ],
    scales2: [
      { value: '大', checked: 'true' },
      { value: '较大' },
      { value: '一般' },
      { value: '较小' },
      { value: '小' }
    ],
    passengers: [
      { value: '多', checked: 'true' },
      { value: '较多' },
      { value: '一般' },
      { value: '较少' },
      { value: '少' }
    ],
    distances1: [
      { value: '近', checked: 'true' },
      { value: '较近' },
      { value: '一般' },
      { value: '较远' },
      { value: '远' }
    ],
    distances2: [
      { value: '近', checked: 'true' },
      { value: '较近' },
      { value: '一般' },
      { value: '较远' },
      { value: '远' }
    ],
    fdStystems: [
      { value: '防盗门对进', checked: 'true' },
      { value: '闭路监控' },
      { value: '无' }
    ],
    fdStystems2: [
      { value: '正常', checked: 'true' },
      { value: '破损' },
      { value: '无法使用' }
    ],
    gpsStystems: [
      { value: '明敷', checked: 'true' },
      { value: '暗敷' }
    ],
    gpsStystems2: [
      { value: '正常', checked: 'true' },
      { value: '破损' },
      { value: '无法使用' }
    ],
    gdStystems: [
      { value: '明敷', checked: 'true' },
      { value: '暗敷' }
    ],
    gdStystems2: [
      { value: '正常', checked: 'true' },
      { value: '破损' },
      { value: '无法使用' }
    ],
    zmStystems: [
      { value: '吊灯', checked: 'true' },
      { value: '吸顶灯' },
      { value: '格栅灯' },
      { value: '日光灯' },
      { value: '其它' }
    ],
    zmStystems2: [
      { value: '正常', checked: 'true' },
      { value: '破损' },
      { value: '无法使用' }
    ],
    ktStystems: [
      { value: '市政集中供应', checked: 'true' },
      { value: '中央空调' },
      { value: '独立空调' },
      { value: '无' }
    ],
    ktStystems2: [
      { value: '正常', checked: 'true' },
      { value: '破损' },
      { value: '无法使用' }
    ],
    txStystems: [
      { value: '电话', checked: 'true' },
      { value: '有线电视' },
      { value: '网络' },
      { value: '无' }
    ],
    txStystems2: [
      { value: '正常', checked: 'true' },
      { value: '破损' },
      { value: '无法使用' }
    ],
    xfStystems: [
      { value: '消防栓', checked: 'true' },
      { value: '灭火器' },
      { value: '自动喷淋' },
      { value: '烟感报警' }
    ],
    xfStystems2: [
      { value: '正常', checked: 'true' },
      { value: '破损' },
      { value: '无法使用' }
    ],
    outerWalls: [
      { value: '清水', checked: 'true' },
      { value: '刷白' },
      { value: '壁纸' },
      { value: '乳胶漆' },
      { value: '墙面装饰' },
      { value: '壁橱隔断' },
      { value: '其它' }
    ],
    outerWalls2: [
      { value: '完好', checked: 'true' },
      { value: '轻度破损' },
      { value: '一般破损' },
      { value: '严重破损' }
    ],
    cf_walls: [
      { value: '刷白', checked: 'true' },
      { value: '乳胶漆' },
      { value: '釉面砖' },
      { value: '其它' }
    ],
    wc_walls: [
      { value: '釉面砖', checked: 'true' },
      { value: '其它' }
    ],
    cf_walls2: [
      { value: '完好', checked: 'true' },
      { value: '轻度破损' },
      { value: '一般破损' },
      { value: '严重破损' }
    ],
    wc_walls2: [
      { value: '完好', checked: 'true' },
      { value: '轻度破损' },
      { value: '一般破损' },
      { value: '严重破损' }
    ],
    ceilings: [
      { value: '清水', checked: 'true' },
      { value: '刷白' },
      { value: '栅格' },
      { value: '塑板' },
      { value: '艺术造型' },
      { value: '抹灰' },
      { value: '吊顶' },
      { value: '其它' },
    ],
    cf_ceilings: [
      { value: '刷白', checked: 'true' },
      { value: '塑板' },
      { value: '艺术造型' },
      { value: '吊顶' },
      { value: '其它' },
    ],
    wc_ceilings: [
      { value: '刷白', checked: 'true' },
      { value: '塑板' },
      { value: '艺术造型' },
      { value: '其它' },
    ],
    cf_ceilings2: [
      { value: '完好', checked: 'true' },
      { value: '轻度破损' },
      { value: '一般破损' },
      { value: '严重破损' }
    ],
    wc_ceilings2: [
      { value: '完好', checked: 'true' },
      { value: '轻度破损' },
      { value: '一般破损' },
      { value: '严重破损' }
    ],
    ceilings2: [
      { value: '完好', checked: 'true' },
      { value: '轻度破损' },
      { value: '一般破损' },
      { value: '严重破损' }
    ],
    floors: [
      { value: '复合地板', checked: 'true' },
      { value: '地砖' },
      { value: '石材' },
      { value: '水泥' },
      { value: '实木' },
      { value: '其它' }
    ],
    cf_floors: [
      { value: '复合地板', checked: 'true' },
      { value: '地砖' },
      { value: '石材' },
      { value: '水泥' },
      { value: '实木' },
      { value: '其它' }
    ],
    wc_floors: [
      { value: '地砖', checked: 'true' },
      { value: '大理石' },
      { value: '其它' }
    ],
    cf_floors2: [
      { value: '完好', checked: 'true' },
      { value: '轻度破损' },
      { value: '一般破损' },
      { value: '严重破损' }
    ],
    wc_floors2: [
      { value: '完好', checked: 'true' },
      { value: '轻度破损' },
      { value: '一般破损' },
      { value: '严重破损' }
    ],
    floors2: [
      { value: '完好', checked: 'true' },
      { value: '轻度破损' },
      { value: '一般破损' },
      { value: '严重破损' }
    ],
    out_doors: [
      { value: '木', checked: 'true' },
      { value: '防盗门' },
      { value: '钢' },
      { value: '铝' },
      { value: '夹板门' },
      { value: '其它' }
    ],
    out_doors2: [
      { value: '完好', checked: 'true' },
      { value: '轻度破损' },
      { value: '一般破损' },
      { value: '严重破损' }
    ],
    yt_status: [
      { value: '完好', checked: 'true' },
      { value: '轻度破损' },
      { value: '一般破损' },
      { value: '严重破损' }
    ],
    windows: [
      { value: '木', checked: 'true' },
      { value: '塑钢' },
      { value: '铝合金' },
      { value: '钢' },
      { value: '彩铝' },
      { value: '防盗网' },
      { value: '门窗套' },
      { value: '其它' }
    ],
    windows2: [
      { value: '完好', checked: 'true' },
      { value: '轻度破损' },
      { value: '一般破损' },
      { value: '严重破损' }
    ],
    structures: [
      { value: '打通双拼', checked: 'true' },
      { value: '隔断为房中房' },
      { value: '其它' }
    ],
    decorations: [
      { value: '精装', checked: 'true' },
      { value: '豪装' },
      { value: '简装' },
      { value: '毛坯' }
    ]
  },

  /**
   * 生命周期函数--监听页面加载
   */
  onLoad: function (options) {
    for (let i=0;i<10;i++) {
      this.setData({
        ['filePathList' + (i+1)]: []
      })
    }
    const matrl_types = ['物业位置图', '估价对象照片', '权属证明资料', '领勘人签名图片', '查勘人签名图片', '说明人签名图片', '确认人签名图片']
    
    this.setData({ task_id: options.id })
    this.getResidenceSurveyData(options.id)
    this.saveSurveyPaths()
    matrl_types.forEach(item => {
      this.getSurveyImgs(options.id, item)
    })
  },
  getResidenceSurveyData(id) {
    getResidenceSurveyData({}, id).then(res => {
      if (res.code === 200) {
        this.setData({
          form: res.data
        })
      } else {
        wx.showToast({
          title: res.msg,
          icon: 'none'
        })
      }
    })
  },
  // 获取查勘图片
  getSurveyImgs(id, matrl_type) {
    const data = {
      matrl_type: matrl_type
    }
    getSurveyImgs(data, id).then(res => {
      if (res.code === 200) {
        const imageList = res.data
        let filePaths = []
        imageList.forEach(item => {
          filePaths.push(item.url)
        })
        if (matrl_type === '物业位置图') {
          this.setData({ filePathList1: filePaths })
        } else if (matrl_type === '权属证明资料') {
          this.setData({ filePathList2: filePaths })
        } else if (matrl_type === '领勘人签名图片') {
          this.setData({ lkr_signatureImgs: filePaths })
        } else if (matrl_type === '查勘人签名图片') {
          this.setData({ ckr_signatureImgs: filePaths })
        } else if (matrl_type === '说明人签名图片') {
          this.setData({ smr_signatureImgs: filePaths })
        } else if (matrl_type === '确认人签名图片') {
          this.setData({ qrr_signatureImgs: filePaths })
        } else {
          const shot_parts = ['外部', '外立面', '景观', '入户大堂', '入户门', '电梯','厨房', '客厅']
          imageList.forEach(item => {
            for (let i=0; i<shot_parts.length; i++) {
              if (item.shot_part === shot_parts[i]) {
                let filePathList = this.data['filePathList' + (i+3)]
                filePathList.push(item.url)
                this.setData({ ['filePathList' + (i+3)]: filePathList })
              }
            }
          })
        }
      }
    })
  },
  formSubmit(e) {
    const form = e.detail.value
    const id = this.data.task_id
    const index = e.detail.target.dataset.index
    form.zbpt = form.zbpt.join(',')
    if (index === '1') {
      // 保存数据 status: 查勘中
      form.status = 2
      saveResidenceSurveyData(form, id).then(res => {
        if (res.code === 200) {
          wx.showToast({
            title: '保存成功！',
            icon: 'none'
          })
        } else {
          wx.showToast({
            title: '保存失败！',
            icon: 'none'
          })
        }
      })
    } else {
      // 完成提交 status: 待审核
      form.status = 3
      saveResidenceSurveyData(form, id).then(res => {
        if (res.code === 200) {
          wx.showToast({
            title: '提交成功！',
            icon: 'none'
          })
        } else {
          wx.showToast({
            title: '提交失败！',
            icon: 'none'
          })
        }
      })
    }
  },
  // 上传查勘照片
  uploadFile: function (e) {
    const _this = this
    let index = +e.target.dataset.index
    
    const matrl_type = index > 2 ? '估价对象照片' : (index === 2 ? '权属证明资料' : 
    '物业位置图')
    let formData = {
      task_id: _this.data.task_id,
      matrl_type: matrl_type
    }
    let shot_part = ''
    switch(index) {
      case 3: shot_part = '外部'; break
      case 4: shot_part = '外立面'; break
      case 5: shot_part = '景观'; break
      case 6: shot_part = '入户大堂'; break
      case 7: shot_part = '入户门'; break
      case 8: shot_part = '电梯'; break
      case 9: shot_part = '厨房'; break
      case 10: shot_part = '客厅'; break
    }
    if (shot_part) {
      formData.shot_part = shot_part
    }
    wx.chooseImage({
      sizeType: ['compressed'],
      success: function (res) {
        let tempFilePaths = res.tempFilePaths
        const num = 10
        for (let i=1; i<=num; i++) {
          index === i ? _this.setData({ ['filePathList' + i]: _this.data['filePathList' + i].concat(tempFilePaths) }) : ''
        }
        for (let i=0; i<tempFilePaths.length; i++) {
          wx.uploadFile({
            url: app.globalData.baseUrl + '/general/v1/survey/material',
            filePath: tempFilePaths[i],
            name: 'file',
            formData: formData,
            header: {
              token: app.globalData.token
            },
            success: function (res) {
              const data = JSON.parse(res.data)
              if (data.code === 200) {
                wx.showToast({
                  title: '上传成功！',
                  image: '../images/success.png'
                })
              } else {
                wx.showToast({
                  title: '上传失败！',
                  image: '../images/fail.png'
                })
              }
            }
          })
        }
      }
    })
  },
  // 实时保存查勘路径
  saveSurveyPaths() {
    this.timer = setInterval(() => {
      const _this = this
      wx.getLocation({
        type: 'gcj02',
        success(res) {
          const data = {
            task_id: _this.data.task_id,
            x: res.longitude,
            y: res.latitude,
            path_time: formatTime(new Date())
          }
          saveSurveyPaths(data).then(res => {
            if (res.code === 200) {
              console.log('路径保存成功！')
            }
          })
        }
      })
    }, 10*1000)
  },
  isChecked(name, value, checked) {
    const form = this.data.from
    return form[name] ? value === form[name] : checked
  },
  dt_radioChange(e) {
    this.setData({
      dt_value: e.detail.value
    })
  },
  // 控制其它输入框
  radioChange(e) {
    const name = e.currentTarget.dataset.name
    const value = e.detail.value
    if (name === 'ktdm') {
      value === '其它' ? this.setData({ show_ktdmqt: true }) : this.setData({ show_ktdmqt: false })
    } else if (name === 'ktqm') {
      value === '其它' ? this.setData({ show_ktqmqt: true }) : this.setData({ show_ktqmqt: false })
    } else if (name === 'ktth') {
      value === '其它' ? this.setData({ show_ktthqt: true }) : this.setData({ show_ktthqt: false })
    } else if (name === 'ktm') {
      value === '其它' ? this.setData({ show_ktmqt: true }) : this.setData({ show_ktmqt: false })
    } else if (name === 'ktc') {
      value === '其它' ? this.setData({ show_ktcqt: true }) : this.setData({ show_ktcqt: false })
    } else if (name === 'cfdm') {
      value === '其它' ? this.setData({ show_cfdmqt: true }) : this.setData({ show_cfdmqt: false })
    } else if (name === 'cfqm') {
      value === '其它' ? this.setData({ show_cfqmqt: true }) : this.setData({ show_cfqmqt: false })
    } else if (name === 'cfth') {
      value === '其它' ? this.setData({ show_cfthqt: true }) : this.setData({ show_cfthqt: false })
    } else if (name === 'wcdm') {
      value === '其它' ? this.setData({ show_wcdmqt: true }) : this.setData({ show_wcdmqt: false })
    } else if (name === 'wcqm') {
      value === '其它' ? this.setData({ show_wcqmqt: true }) : this.setData({ show_wcqmqt: false })
    } else if (name === 'wcth') {
      value === '其它' ? this.setData({ show_wcthqt: true }) : this.setData({ show_wcthqt: false })
    } else if (name === 'sfgbyjg') {
      value === '其它' ? this.setData({ show_sfgbyjg_qt: true }) : this.setData({ show_sfgbyjg_qt: false })
    } else if (name === 'syxz') {
      value === '出租' ? this.setData({ show_syxz_zj: true }) : this.setData({ show_syxz_zj: false })
    } 
  },
  handleTabChange(e) {
    this.setData({
      selectedId: e.detail
    })
  },
  onInputChange(e) {
    this.setData({
      info: e.detail.value
    })
  },
  cancel() {
    this.setData({
      show: false
    })
  },
  confirm() {
    if (!this.data.info) {
      wx.showToast({
        title: '消息不能为空！',
        icon: 'none'
      })
      return
    }
    const data = {
      content: this.data.info,
      task_id: this.data.task_id,
      type: '查勘消息',
      creator: app.globalData.phoneNum
    }
    sendMessage(data).then(res => {
      if (res.code === 200) {
        wx.showToast({
          title: '发送成功！',
          icon: 'none'
        })
        this.setData({
          info: '',
          show: false
        })
      }
    })
  },
  bindDateChange(e) {
    // 表单日期重新编辑
    if (this.data.form.ckrq) {
      this.data.form.ckrq = ''
      this.setData({
        form: this.data.form
      })
    }
    this.setData({
      date: e.detail.value
    })
  },
  showModal() {
    this.setData({
      show: true
    })
  },
  toHandwriting(e) {
    const index = e.target.dataset.index
    const id = this.data.task_id
    wx.navigateTo({
      url: `/pages/handWriting/handWriting?index=${index}&id=${id}`,
    })
  },
  /**
   * 生命周期函数--监听页面初次渲染完成
   */
  onReady: function () {

  },

  /**
   * 生命周期函数--监听页面显示
   */
  onShow: function () {

  },

  /**
   * 生命周期函数--监听页面隐藏
   */
  onHide: function () {

  },

  /**
   * 生命周期函数--监听页面卸载
   */
  onUnload: function () {

  },

  /**
   * 页面相关事件处理函数--监听用户下拉动作
   */
  onPullDownRefresh: function () {

  },

  /**
   * 页面上拉触底事件的处理函数
   */
  onReachBottom: function () {

  },

  /**
   * 用户点击右上角分享
   */
  onShareAppMessage: function () {

  }
})