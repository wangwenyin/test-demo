<template>
  <div>
    <el-row class="search-container" style="padding: 5px" >
      <el-button type="primary" size="small" round style="float:left;margin-left:10px;" @click="onBtnPublishClick" >发布</el-button>
      <el-input placeholder="请输入查询内容" size="small" style="float:right;margin-right:10px;width:400px" >
        <el-select slot="prepend" v-model="searchOption.clause" style="width:120px;" placeholder="请选择" >
          <el-option label="标题" value="标题" />
          <el-option label="状态" value="状态" />
          <el-option label="发布人" value="发布人" />
        </el-select>
        <el-button slot="append" icon="el-icon-search" @click="onSearchNoticeClick" />
      </el-input>
      <date-picker ref="datePicker" :no-default-value="false" style="float:right;margin-right:10px;" />
    </el-row>
    <div style="margin:10px;">
      <el-table :data="list" :header-cell-style="changeHeaderStyle" style="width: 100%;" border fit size="small" >
        <el-table-column label="序号" type="index" width="50" align="center" />
        <el-table-column label="标题" min-width="250" align="center" prop="title" />
        <el-table-column label="状态" width="150" align="center" >
          <template slot-scope="scope">
            <el-tag :type="setTagTypeByState(scope.row.state)" size="mini" >{{ scope.row.state }}</el-tag>
          </template>
        </el-table-column>
        <el-table-column label="日期" width="150" align="center" prop="publish_time" />
        <el-table-column label="发布人" width="150" align="center" prop="publisher" />
        <el-table-column label="操作" width="250" align="center" >
          <template slot-scope="scope">
            <el-button :disabled="scope.row.state === '已删除'" size="mini" type="primary" @click="onBtnViewClick(scope.$index, scope.row)" >
              编辑
            </el-button>
            <el-button v-if="scope.row.state !== '已删除'" size="mini" type="warning" @click="onUpdateState(scope.row,'已删除','删除')">
              删除
            </el-button>
            <el-button v-if="scope.row.state === '已删除'" size="mini" @click="onUpdateState(scope.row,'普通','恢复')" >
              恢复
            </el-button>
            <el-button v-if="scope.row.state === '普通'" size="mini" @click="onUpdateState(scope.row,'置顶','置顶')" >
              置顶
            </el-button>
            <el-button v-if="scope.row.state === '置顶'" size="mini" @click="onUpdateState(scope.row,'普通','取消置顶')" >
              取消置顶
            </el-button>
          </template>
        </el-table-column>
      </el-table>
      <el-row type="flex" justify="center" style="margin-top:5px" >
        <pagination
          :total="listQuery.total"
          :page.sync="listQuery.page"
          :limit.sync="listQuery.limit"
          :page-sizes="listQuery.pageSizes"
          @pagination="getNotice" />
      </el-row>
    </div>
  </div>
</template>
<script>
import DatePicker from '@/components/DateTimePicker'
import Pagination from '@/components/Pagination'
import { getNotices, updateNotices } from '@/api/publicservice/notices'
export default {
  components: { DatePicker, Pagination },
  data() {
    return {
      searchOption: {
        clause: '标题',
        text: null
      },
      listQuery: {
        page: 1,
        limit: 10,
        total: 0,
        pageSizes: [10, 20, 30, 50]
      },
      list: [],
      noticeStatus: [
        {
          text: '置顶',
          value: '置顶'
        },
        {
          text: '普通',
          value: ''
        },
        {
          text: '已删除',
          value: '已删除'
        }
      ]
    }
  },
  mounted() {
    this.getNotice()
  },
  methods: {
    getNotice(val) {
      if (val) {
        this.listQuery.limit = val.limit
        this.listQuery.page = val.page
      }
      const params = {
        page: this.listQuery.page,
        limit: this.listQuery.limit,
        title:
          this.searchOption.clause === '标题' ? this.searchOption.text : null,
        state:
          this.searchOption.clause === '状态' ? this.searchOption.text : null,
        start_date: this.$refs.datePicker.value[0] ? this.$refs.datePicker.value[0] : null,
        end_date: this.$refs.datePicker.value[1] ? this.$refs.datePicker.value[1] : null,
        publisher:
          this.searchOption.clause === '发布人' ? this.searchOption.text : null
      }
      getNotices(params).then(response => {
        if (response.code === 200) {
          this.list = response.data
          this.listQuery.total = response.cnt
        } else {
          this.$message({
            type: 'error',
            message: '数据获取出错!',
            duration: 5 * 1000
          })
        }
      })
    },
    onUpdateState(row, state, val) {
      const data = {
        state: state
      }
      this.$confirm('此操作将' + val + '该公告, 是否继续?', '提示', {
        confirmButtonText: '确定',
        cancelButtonText: '取消',
        type: 'warning'
      }).then(() => {
        updateNotices(row.notice_id, data).then(response => {
          if (response.code === 200) {
            this.$message({
              type: 'success',
              message: val + '成功!'
            })
            row.state = state
          } else {
            this.$message({
              type: 'info',
              message: val + '失败'
            })
          }
        })
      }).catch(() => {
        this.$message({
          type: 'info',
          message: '已取消'
        })
      })
    },
    changeHeaderStyle() {
      return { backgroundColor: '#3C3B3F', width: '100%', color: '#FFFFFF' }
    },
    onBtnPublishClick() {
      this.$router.push({ name: 'NoticePublish' })
    },
    onBtnViewClick(index, row) {
      this.$router.push({ name: 'NoticeModify', query: { notice_id: row.notice_id }})
    },
    filterNoticeStatus(value, row) {
      return row.state === value
    },
    onSearchNoticeClick() {
      this.getNotice({ page: 1, limit: 10 })
    },
    setTagTypeByState(state) {
      if (state === '普通') {
        return 'primary'
      } else if (state === '置顶') {
        return 'danger'
      } else if (state === '已删除') {
        return 'info'
      }
    }
  }
}
</script>
<style lang="scss" scoped>
</style>

